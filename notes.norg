class Card():
id
--front--
title
front_tip
front_img
front_sound
--back--
title
back_text
back_img
back_sound

eval $(poetry env activate)

* PostgreSQL:
sudo systemctl start postgresql
sudo systemctl enable postgresql
sudo -u postgres psql

  - db: flashcards_db
  - test db: flashcards_test_db
  - user: flashcards_use
  - \\c flashcards_db # Connects to db
  - \\du # Lists users
  - \\list # Lists databases


In your application, use a package like python-dotenv to load these environment variables:
from dotenv import load_dotenv
load_dotenv()  # This loads the variables from .env

import os
database_url = os.getenv("DATABASE_URL")
* .env
  DATABASE_URL=postgresql://flashcards_user:password_goes_here@localhost/flashcards_db

* Alembic
  - poetry run alembic revision --autogenerate -m "Create flashcard table"
  - poetry run alembic upgrade head # runs the upgrade funcion in /migrations/version.py
* SQLAlchemy
  - Core Approach/Classical Mapping instead of Metadata/schema-centric approach


  lua vim.lsp.buf.code_action()
